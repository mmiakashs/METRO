diff --git a/execution_scripts/utd_mhad_mifu_pt.sh b/execution_scripts/utd_mhad_mifu_pt.sh
deleted file mode 100755
index fa5ee17..0000000
--- a/execution_scripts/utd_mhad_mifu_pt.sh
+++ /dev/null
@@ -1,24 +0,0 @@
-python3 ../metro_training.py \
--tvp 1 \
--lr 0.0003 \
--ng 1 \
--cdn 1 \
--sml 60 \
--bs 2 \
--ep 500 \
--enl 2 \
--fes 256 \
--lhs 256 \
--menh 2 \
--lld 0.3 \
--uld 0.3 \
--cout 64 \
--mmattn_type 'concat' \
--logbd 'log/utd_mhad_pt' \
--logf 'exe_utd_mifu_rdi_s_h122_dp3_ex2_re_vpi2_pt.log' \
--tbl \
--tb_wn 'tb_runs/tb_utd_mifu/rdi_s_h122_re_vpi2_pt' \
--mcp 'utd_mifu_rdi_s_h122_dp3_re_pt' \
--vpi 2 \
--ipf \
--wln 'utd_mifu_rdi_s_h122_re_vpi2_pt'
diff --git a/metro_training.py b/metro_training.py
index e9781ac..c37a677 100644
--- a/metro_training.py
+++ b/metro_training.py
@@ -269,6 +269,7 @@ transforms_modalities[config.outside_modality_tag] = rgb_transforms
 
 mm_module_properties = defaultdict(dict)
 for modality in modalities:
+    mm_module_properties[modality]['cnn_in_channel'] = config.image_channels
     mm_module_properties[modality]['cnn_out_channel'] = cnn_out_channel
     mm_module_properties[modality]['kernel_size'] = kernel_size
     mm_module_properties[modality]['feature_embed_size'] = feature_embed_size
@@ -297,7 +298,7 @@ mm_har_train = Dataset(data_dir_base_path=data_file_dir_base_path,
                        is_pretrained_fe=args.is_pretrained_fe)
 
 person_ids = mm_har_train.data.person_ID.unique()
-num_activity_types = mm_har_train.num_activity_types
+num_activity_types = mm_har_train.num_activities
 log_execution(log_base_dir, log_filename, f'total_activities: {num_activity_types}')
 log_execution(log_base_dir, log_filename, f'train person_ids: {person_ids}')
 mm_har_train = None
@@ -343,7 +344,7 @@ for train_ids, test_ids in loov.split(split_ids):
     restricted_ids.append(split_ids[train_ids[valid_person_index]])
     if (total_valid_persons == 2):
         restricted_ids.append(split_ids[train_ids[valid_person_index + 1]])
-    restricted_labels = 'performer_id'
+    restricted_labels = 'person_ID'
 
     mm_har_train = Dataset(data_dir_base_path=data_file_dir_base_path,
                            embed_dir_base_path=args.embed_dir_base_path,
@@ -371,7 +372,7 @@ for train_ids, test_ids in loov.split(split_ids):
                            embed_dir_base_path=args.embed_dir_base_path,
                            modalities=modalities,
                            allowed_ids=allowed_valid_ids,
-                           allowed_labels='performer_id',
+                           allowed_labels='person_ID',
                            seq_max_len=seq_max_len,
                            window_size=window_size,
                            window_stride=window_stride,
@@ -389,7 +390,7 @@ for train_ids, test_ids in loov.split(split_ids):
                           embed_dir_base_path=args.embed_dir_base_path,
                           modalities=modalities,
                           allowed_ids=allowed_test_id,
-                          allowed_labels='performer_id',
+                          allowed_labels='person_ID',
                           seq_max_len=seq_max_len,
                           window_size=window_size,
                           window_stride=window_stride,
@@ -409,11 +410,11 @@ for train_ids, test_ids in loov.split(split_ids):
     log_execution(log_base_dir, log_filename, f'valid_dataloader len: {len(valid_dataloader)}\n')
     log_execution(log_base_dir, log_filename, f'test_dataloader len: {len(test_dataloader)}\n')
     log_execution(log_base_dir, log_filename,
-                  f'train performers ids: {sorted(mm_har_train.data.performer_id.unique())}\n')
+                  f'train performers ids: {sorted(mm_har_train.data.person_ID.unique())}\n')
     log_execution(log_base_dir, log_filename,
-                  f'valid performers ids: {sorted(mm_har_valid.data.performer_id.unique())}\n')
+                  f'valid performers ids: {sorted(mm_har_valid.data.person_ID.unique())}\n')
     log_execution(log_base_dir, log_filename,
-                  f'test performers ids: {sorted(mm_har_test.data.performer_id.unique())}\n')
+                  f'test performers ids: {sorted(mm_har_test.data.person_ID.unique())}\n')
     log_execution(log_base_dir, log_filename,
                   f'train dataset len: {len(train_dataloader.dataset)}, train dataloader len: {len(train_dataloader)}\n')
     log_execution(log_base_dir, log_filename,
diff --git a/src/network/UVA_METRO_Model.py b/src/network/UVA_METRO_Model.py
index d57822c..7b3f844 100644
--- a/src/network/UVA_METRO_Model.py
+++ b/src/network/UVA_METRO_Model.py
@@ -9,8 +9,6 @@ from ..utils import config
 class UVA_METRO_Model(nn.Module):
     def __init__(self, mm_module_properties,
                  modalities,
-                 num_joints,
-                 num_attribs,
                  num_activity_types,
                  window_size, window_stride,
                  modality_embedding_size,
@@ -25,8 +23,6 @@ class UVA_METRO_Model(nn.Module):
         self.mm_module_properties = mm_module_properties
         self.modalities = modalities
         self.num_modality = len(modalities)
-        self.num_joints = num_joints
-        self.num_attribs = num_attribs
         self.num_activity_types = num_activity_types
         self.batch_first = batch_first
 
@@ -76,14 +72,6 @@ class UVA_METRO_Model(nn.Module):
 
         self.mm_embeddings_bn =nn.BatchNorm1d(self.num_modality)
 
-        self.mm_mhattn = nn.MultiheadAttention(embed_dim=self.modality_embedding_size,
-                                               num_heads=self.mm_final_fusion_mhattn_nhead,
-                                               dropout=self.dropout)
-
-        self.mm_mhattn_bn = nn.BatchNorm1d(self.total_fusing_modality_combo)
-        self.mm_mhattn_relu = nn.ReLU()
-        self.mm_mhattn_dropout = nn.Dropout(p=self.dropout)
-
         if (self.mm_embedding_attn_merge_type == 'sum'):
             if (self.lstm_bidirectional):
                 self.fc_output1 = nn.Linear(self.modality_embedding_size, self.modality_embedding_size // 2)
